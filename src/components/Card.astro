---
import type { CollectionEntry } from 'astro:content'
import { Image } from 'astro:assets'
import Icon from '@/components/Icon.astro'
import PixelContainer from '@/components/PixelContainer.astro'
import IconLabel from '@/components/IconLabel.astro'
import { dayjs, strToHSL, type MarkdownCollectionKey } from '@/utils'
import { type PrimaryColor, dateFormat } from '@/siteConfig'

export type Props = {
  primaryColor: PrimaryColor
  entry: CollectionEntry<MarkdownCollectionKey>
}

const {
  primaryColor,
  entry: { collection, id, data },
} = Astro.props

const href = `/${collection}/${id}`
const title = data.title
const date = dayjs(data.pubDate).format(dateFormat)
const version =
  'godotVersion' in data
    ? 'v' + (data.godotVersion.match(/^\d+\.\d+/)?.[0] || data.godotVersion)
    : undefined

const coverBackgroundColor = strToHSL(title, 70, 75)
---

<a class="inline-block" href={href}>
  <PixelContainer
    class="hover:-translate-x-[3px] hover:-translate-y-[3px] h-full p-2 flex flex-col"
  >
    {
      data.cover ? (
        <Image
          src={data.cover}
          alt="Card image"
          class="w-full aspect-[16/9] object-cover"
        />
      ) : (
        <div>
          <div
            class="aspect-[16/9] flex justify-center items-center"
            style={{ backgroundColor: coverBackgroundColor }}
          >
            <Icon name="kodot-solid" class="text-white h-1/3 w-1/3" />
          </div>
        </div>
      )
    }
    <div class="p-4 flex flex-col justify-between h-full">
      <div class="font-bold">{title}</div>
      <div
        class="mt-2 flex flex-wrap items-center text-[8px] font-ps2 space-x-2"
      >
        <IconLabel
          name="clock"
          primaryColor={primaryColor}
          labelClass="pt-[4px]"
          >{date}
        </IconLabel>
        {
          version && (
            <IconLabel
              name="kodot-solid"
              primaryColor={primaryColor}
              labelClass="pt-[4px]"
            >
              {version}
            </IconLabel>
          )
        }
      </div>
    </div>
  </PixelContainer>
</a>
