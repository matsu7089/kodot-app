---
import type { Page } from 'astro'
import type { CollectionEntry } from 'astro:content'
import type { PrimaryColor } from '@/siteConfig'
import type { MarkdownCollectionKey } from '@/utils'
import BaseLayout from '@/layouts/BaseLayout.astro'
import Card from '@/components/Card.astro'
import Pagination from '@/components/Pagination.astro'
import IconLabel from '@/components/IconLabel.astro'
import TagChip from '@/components/TagChip.astro'

export type Props = {
  title: string
  tagText?: string
  icon: string
  page: Page<CollectionEntry<MarkdownCollectionKey>>
  primaryColor: PrimaryColor
  tags?: Array<string>
  seoTitle?: string
}

const { title, tagText, icon, page, primaryColor, tags, seoTitle } = Astro.props
---

<BaseLayout
  primaryColor={primaryColor}
  seoHeadProps={{ title: seoTitle || title }}
>
  <div class="text-white dark:text-gh-dimmed-text flex justify-center my-8">
    <IconLabel name={icon} isLargeIcon class="font-ps2 text-xl font-bold"
      >{title}</IconLabel
    >
    {tagText && <span class="text-2xl font-bold">{tagText}</span>}
  </div>
  <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mx-4">
    {
      page.data.map((entry) => (
        <Card primaryColor={primaryColor} entry={entry} />
      ))
    }
  </div>
  <Pagination class="my-8" primaryColor={primaryColor} page={page} />
  {
    tags && (
      <div class="my-8 flex flex-wrap justify-center gap-2">
        {tags.map((tag) => (
          <TagChip label={tag} isLarge />
        ))}
      </div>
    )
  }
</BaseLayout>
